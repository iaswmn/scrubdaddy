@charset "UTF-8";
/*
  $list: a, b, d, e, f;
  $new-list: insert-nth($list, 3, c);     // a, b, c, d, e, f
*/
/*
  $list: a, b, r, a, c a, d a, b, r, a;
  $new-list: replace($list, a, u);       // u, b, r, u, c a, d a, b, r, u;
*/
/*
  $list: a, b, z, d, e, f;
  $new-list: replace-nth($list,   3, c); // a, b, c, d, e, f
  $new-list: replace-nth($list,  -2, c); // a, b, c, d, z, f
*/
/*
  $list: a, b z, c, z, d, z, e, f;
  $new-list: remove($list, z);       // a, b z, c, d, e, f;
*/
/*
  $list: a, b, z, c, d, e, f;
  $new-list: remove-nth($list,   3); // a, b, c, d, e, f
  $new-list: remove-nth($list,  -2); // a, b, z, c, d, f
*/
/*
  $list: a, b, c, d, e, f;
  $new-list: slice($list, 3, 5);   // c, d, e
  $new-list: slice($list, 4, 4);   // d
*/
/*
  $list: a, b, c d e, f, g, h;
  $new-list: reverse($list);       // h, g, f, c d e, b, a
  $new-list: reverse($list, true); // h, g, f, e d c, b, a
*/
/*
    Добавляет константу к каждому значению карты.

    Пример:
      $map: (
        (1024px, 0): 100px,
        (768px, 1024px): 80px,
        (0, 768px): 60px,
      )

      > map_add($map, 10px)
      (
        (1024px, 0): 110px,
        (768px, 1024px): 90px,
        (0, 768px): 70px,
      )
 */
/*
    Получение ключа карты $map media-интервалов,
    в который входит искомый интервал $media.
    Если искомый интервал находится на границе
    двух или более интервалов карты, генерируется ошибка.

    Пример:
      $map: (
        (1024px, 0): 100px,
        (768px, 1024px): 80px,
        (0, 768px): 60px,
      )

      > media_map_key($map, (1200px, 0))
      (1024px, 0)
 */
/*
    Получение среза media-карты.

    Пример:
      $map: (
        (1024px, 0): 100px,
        (768px, 1024px): 80px,
        (0, 768px): 60px,
      )

      > media_map_slice($map, (640px, 1200px))
      (
        (1024px, 1200px): 100px,
        (768px, 1024px): 80px,
        (640px, 768px): 60px,
      )
 */
/*
  Многоколоночная верстка через flexbox.

  Пример:
    .list {
      @include flexbox;
      @include flex-flow(row wrap);

      .item {
        @include flex-columns(2, 10px, 10px);
      }
    }
*/
/*
  Пример:
    input {
      color: #808080;
      ...
      @include placeholder {
        color: red;
      }
    }
*/
.popup-preloader .popup-window {
  width: auto; }

.popup-preloader .popup-content {
  padding: 0;
  min-height: 0;
  text-align: center; }
  .popup-preloader .popup-content:after {
    content: '';
    display: inline-block;
    height: 100%;
    min-height: inherit;
    vertical-align: middle; }
  @media all and (min-width: 1024px) {
    .popup-preloader .popup-content {
      width: 260px; } }
  @media all and (min-width: 640px) and (max-width: 1023px) {
    .popup-preloader .popup-content {
      width: 250px; } }
  @media all and (min-width: 480px) and (max-width: 639px) {
    .popup-preloader .popup-content {
      width: 200px; } }
  @media all and (max-width: 479px) {
    .popup-preloader .popup-content {
      width: 180px; } }
  @media all and (min-width: 1024px) {
    .popup-preloader .popup-content {
      height: 180px; } }
  @media all and (min-width: 640px) and (max-width: 1023px) {
    .popup-preloader .popup-content {
      height: 160px; } }
  @media all and (max-width: 639px) {
    .popup-preloader .popup-content {
      height: 120px; } }

.popup .popup-window:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -100;
  pointer-events: none;
  background: rgba(255, 255, 255, 0.8);
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  -webkit-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  -moz-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  -ms-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  -o-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  transition: opacity 0.2s 0.1s, z-index 0s 0.3s; }

.popup .preloader-overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: -100;
  pointer-events: none;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  -webkit-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  -moz-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  -ms-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  -o-transition: opacity 0.2s 0.1s, z-index 0s 0.3s;
  transition: opacity 0.2s 0.1s, z-index 0s 0.3s; }

.popup.popup-preloader-overlay .popup-window {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  /* Chrome all / Safari all */
  -moz-user-select: none;
  /* Firefox all */
  -ms-user-select: none;
  /* IE 10+ */
  /* No support for these yet, use at own risk */
  -o-user-select: none;
  user-select: none; }
  .popup.popup-preloader-overlay .popup-window:before {
    z-index: 100;
    pointer-events: auto;
    filter: progid:DXImageTransform.Microsoft.Alpha(enabled=false);
    opacity: 1;
    -webkit-transition: opacity 0.2s, z-index 0s;
    -moz-transition: opacity 0.2s, z-index 0s;
    -ms-transition: opacity 0.2s, z-index 0s;
    -o-transition: opacity 0.2s, z-index 0s;
    transition: opacity 0.2s, z-index 0s; }

.popup.popup-preloader-overlay .preloader-overlay {
  z-index: 101;
  pointer-events: auto;
  filter: progid:DXImageTransform.Microsoft.Alpha(enabled=false);
  opacity: 1;
  -webkit-transition: opacity 0.2s, z-index 0s;
  -moz-transition: opacity 0.2s, z-index 0s;
  -ms-transition: opacity 0.2s, z-index 0s;
  -o-transition: opacity 0.2s, z-index 0s;
  transition: opacity 0.2s, z-index 0s; }
